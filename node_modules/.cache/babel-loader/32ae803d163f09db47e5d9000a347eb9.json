{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Varun\\\\Documents\\\\GitHub\\\\Roaming-Fraud-DApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Varun\\\\Documents\\\\GitHub\\\\Roaming-Fraud-DApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Varun\\\\Documents\\\\GitHub\\\\Roaming-Fraud-DApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Varun\\\\Documents\\\\GitHub\\\\Roaming-Fraud-DApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Varun\\\\Documents\\\\GitHub\\\\Roaming-Fraud-DApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Varun\\\\Documents\\\\GitHub\\\\Roaming-Fraud-DApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Varun\\\\Documents\\\\GitHub\\\\Roaming-Fraud-DApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Varun\\\\Documents\\\\GitHub\\\\Roaming-Fraud-DApp\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as XLSX from 'xlsx';\nimport { Table, Button } from 'react-bootstrap';\nimport image from './How_Does_Blockchain_work_Inlea_02.png';\nimport Meme from '../abis/Meme.json';\n\nvar _require = require('ipfs-http-client'),\n    create = _require.create;\n\nvar ipfs = create({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n\nvar Web3 = require('web3');\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, networkId, networkData, abi, address, contract, memeHash;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context2.sent;\n                networkData = Meme.networks[networkId];\n\n                if (!networkData) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                abi = Meme.abi;\n                address = networkData.address;\n                contract = web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: contract\n                });\n                _context2.next = 16;\n                return contract.methods.get().call();\n\n              case 16:\n                memeHash = _context2.sent;\n                this.setState({\n                  memeHash: memeHash\n                });\n                _context2.next = 21;\n                break;\n\n              case 20:\n                window.alert(\"Smart Contract no deployed!\");\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n      };\n\n      var promise = new Promise(function (resolve, reject) {\n        var fileReader = new FileReader();\n        fileReader.readAsArrayBuffer(file);\n\n        fileReader.onload = function (e) {\n          var bufferArray = e.target.result;\n          var wb = XLSX.read(bufferArray, {\n            type: 'buffer'\n          });\n          var wsname = wb.SheetNames[0];\n          var ws = wb.Sheets[wsname];\n          var data = XLSX.utils.sheet_to_json(ws);\n          resolve(data);\n        };\n\n        fileReader.onerror = function (error) {\n          reject(error);\n        };\n      });\n      promise.then(function (d) {\n        _this.setState({\n          items: d\n        });\n      });\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      console.log('Submitting the form...');\n      var res = ipfs.add(_this.state.buffer);\n      res.then(function (result, error) {\n        console.log(\"IPFS Result\", result);\n        var arr = [];\n\n        for (var key in result) {\n          arr.push(result[key]);\n        }\n\n        var memeHash = arr[0];\n\n        _this.setState({\n          memeHash: memeHash\n        });\n\n        console.log(memeHash);\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        _this.state.contract.methods.set(memeHash).send({\n          from: _this.state.account\n        }).then(function (r) {\n          _this.setState({\n            memeHash: memeHash\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      memeHash: '',\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Please use metamask');\n                }\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"render\",\n    // hash: QmQtejz4MsMciwqCtm51LhzaXpRPHfiX2W5bN8KjmeyVqk\n    // url: https://ipfs.infura.io/ipfs/QmQtejz4MsMciwqCtm51LhzaXpRPHfiX2W5bN8KjmeyVqk\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Roaming Fraud Prevention\"), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.state.account)))), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: image,\n        alt: \"this is blockchain image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Upload Dataset\"), React.createElement(\"form\", {\n        id: \"space\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        id: \"demo-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"outline-success\",\n        as: \"input\",\n        type: \"submit\",\n        value: \"Upload\",\n        id: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: \"https://ipfs.infura.io/ipfs/\" + this.state.memeHash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-success\",\n        as: \"input\",\n        type: \"button\",\n        value: \"Download\",\n        id: \"fetch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Date & Time\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Cell ID\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Country Code\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"SMS In\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"SMS Out\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Call In\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Call Out\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Internet\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, this.state.items.map(function (d) {\n        return React.createElement(\"tr\", {\n          key: d.datetime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, d.datetime), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, d.CellID), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, d.countrycode), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, d.smsin), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, d.smsout), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, d.callin), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, d.callout), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, d.internet));\n      }))))))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Varun\\Documents\\GitHub\\Roaming-Fraud-DApp\\src\\components\\App.js"],"names":["React","Component","XLSX","Table","Button","image","Meme","require","create","ipfs","host","port","protocol","Web3","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","abi","address","contract","Contract","methods","get","call","memeHash","alert","props","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","promise","Promise","resolve","reject","fileReader","onload","e","bufferArray","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","onerror","error","then","d","items","onSubmit","console","log","res","add","state","arr","key","push","set","send","from","r","ethereum","enable","currentProvider","map","datetime","CellID","countrycode","smsin","smsout","callin","callout","internet"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport * as XLSX from 'xlsx';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport image from './How_Does_Blockchain_work_Inlea_02.png'\r\nimport Meme from '../abis/Meme.json'\r\n\r\nconst { create } = require('ipfs-http-client')\r\nconst ipfs = create({ host: 'ipfs.infura.io', port: '5001', protocol: 'https' })\r\nconst Web3 = require('web3')\r\n\r\nclass App extends Component {\r\n  \r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = Meme.networks[networkId]\r\n    if(networkData) {\r\n      const abi = Meme.abi\r\n      const address = networkData.address\r\n      const contract = web3.eth.Contract(abi, address)\r\n      this.setState({ contract })\r\n      const memeHash = await contract.methods.get().call()\r\n      this.setState({ memeHash })\r\n    }\r\n    else {\r\n      window.alert(\"Smart Contract no deployed!\")\r\n    }\r\n  }\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      buffer: null,\r\n      contract: null,\r\n      memeHash: '',\r\n      items: []\r\n    };\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Please use metamask')\r\n    }\r\n  }\r\n  \r\n  captureFile = (event) => {\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => {\r\n      this.setState({ buffer: Buffer(reader.result) })\r\n    }\r\n    const promise = new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(file)\r\n      fileReader.onload = (e) => {\r\n        const bufferArray = e.target.result;\r\n        const wb = XLSX.read(bufferArray, {type: 'buffer'});\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n        const data = XLSX.utils.sheet_to_json(ws);\r\n        resolve(data);\r\n      }\r\n      fileReader.onerror = ((error) => {\r\n        reject(error);\r\n      })\r\n    })\r\n    promise.then((d) => {\r\n      this.setState({ items: d })\r\n    })\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault()\r\n    console.log('Submitting the form...')\r\n    const res = ipfs.add(this.state.buffer)\r\n    res.then((result, error) => {\r\n      console.log(\"IPFS Result\", result)\r\n      const arr = []\r\n      for (const key in result) {\r\n        arr.push(result[key])\r\n      }\r\n      const memeHash = arr[0]\r\n      this.setState({ memeHash: memeHash})\r\n      console.log(memeHash)\r\n      if(error) {\r\n        console.error(error)\r\n        return\r\n      }\r\n      this.state.contract.methods.set(memeHash).send({ from: this.state.account }).then((r) => {\r\n        this.setState({ memeHash })\r\n      })\r\n    })\r\n  }\r\n  // hash: QmQtejz4MsMciwqCtm51LhzaXpRPHfiX2W5bN8KjmeyVqk\r\n  // url: https://ipfs.infura.io/ipfs/QmQtejz4MsMciwqCtm51LhzaXpRPHfiX2W5bN8KjmeyVqk\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"#\">\r\n            Roaming Fraud Prevention\r\n          </a>\r\n          <ul className=\"navbar-nav px-3\">\r\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n              <small className=\"text-white\">{this.state.account}</small>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <img src={ image } alt=\"this is blockchain image\" />\r\n                <h1>Upload Dataset</h1>\r\n                <form id=\"space\" onSubmit={this.onSubmit}>\r\n                  <div>\r\n                    <div id=\"spacing\">\r\n                      <input type=\"file\" onChange={this.captureFile} id=\"demo-file\" />\r\n                      <Button variant=\"outline-success\" as=\"input\" type=\"submit\" value=\"Upload\" id=\"button\" />\r\n                      <a href={\"https://ipfs.infura.io/ipfs/\" + this.state.memeHash} >\r\n                        <Button variant=\"outline-success\" as=\"input\" type=\"button\" value=\"Download\" id=\"fetch\" />\r\n                      </a>\r\n                    </div>\r\n                    <Table striped bordered hover>\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">Date & Time</th>\r\n                          <th scope=\"col\">Cell ID</th>\r\n                          <th scope=\"col\">Country Code</th>\r\n                          <th scope=\"col\">SMS In</th>\r\n                          <th scope=\"col\">SMS Out</th>\r\n                          <th scope=\"col\">Call In</th>\r\n                          <th scope=\"col\">Call Out</th>\r\n                          <th scope=\"col\">Internet</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.items.map((d) => (\r\n                          <tr key={d.datetime}>\r\n                            <td>{d.datetime}</td>\r\n                            <td>{d.CellID}</td>\r\n                            <td>{d.countrycode}</td>\r\n                            <td>{d.smsin}</td>\r\n                            <td>{d.smsout}</td>\r\n                            <td>{d.callin}</td>\r\n                            <td>{d.callout}</td>\r\n                            <td>{d.internet}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}